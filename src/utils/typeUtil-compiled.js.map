{"version":3,"sources":["typeUtil.js"],"names":[],"mappings":"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","file":"typeUtil-compiled.js","sourcesContent":["/**\n * Created by lyc on 17-6-1.\n */\n\nexport const typeUtil = {\n  /**\n   * 报告类型\n   * @param type\n   * @returns {string}\n   */\n  briefingType: function (type) {\n    let briefingType = ''\n    type = type.toUpperCase()\n    switch (type) {\n      case 'DAILY':\n        briefingType = '日报'\n        break\n      case 'WEEKLY':\n        briefingType = '周报'\n        break\n      case 'MONTHLY':\n        briefingType = '月报'\n        break\n      case 'QUARTERLY':\n        briefingType = '季报'\n        break\n      case 'SEMIANNUAL':\n        briefingType = '半年报'\n        break\n      case 'ANNUAL':\n        briefingType = '年报'\n        break\n      case 'SPECIAL':\n        briefingType = '专报'\n        break\n    }\n\n    return briefingType\n  },\n  /**\n   * 情感值类型\n   * @param type\n   * @returns {string}\n   */\n  sentimentType: function (type) {\n    let sentimentType = ''\n    type = type.toLowerCase()\n    switch (type) {\n      case 'pos':\n        sentimentType = '正面'\n        break\n      case 'neg':\n        sentimentType = '负面'\n        break\n      case 'neu':\n        sentimentType = '中性'\n        break\n    }\n\n    return sentimentType\n  },\n  /**\n   * 将显示的情感值转化为数据库存储的对应值\n   * @param type\n   * @returns {string}\n   */\n  encodeSentimentType: function (type) {\n    let sentimentType = ''\n    switch (type) {\n      case '正面':\n        sentimentType = 'POS'\n        break\n      case '负面':\n        sentimentType = 'NEG'\n        break\n      case '中性':\n        sentimentType = 'NEU'\n        break\n    }\n\n    return sentimentType\n  },\n\n  /**\n   * 文章类型\n   * @param type\n   * @returns {string}\n   */\n  articleType: function (type) {\n    let articleType = ''\n    type = type.toLowerCase()\n    switch (type) {\n      case 'news':\n        articleType = '新闻'\n        break\n      case 'weibo':\n        articleType = '微博'\n        break\n      case 'bbs':\n        articleType = '论坛'\n        break\n      case 'bar':\n        articleType = '贴吧'\n        break\n      case 'comments':\n        articleType = '评论'\n        break\n      case 'article':\n        articleType = '报道'\n        break\n      default:\n        articleType = type\n        break\n    }\n\n    return articleType\n  },\n  /**\n   * 将显示的文章类型转化为数据库存储的对应值\n   * @param type\n   * @returns {string}\n   */\n  encodeArticleType: function (type) {\n    let articleType = ''\n    switch (type) {\n      case '新闻':\n        articleType = 'news'\n        break\n      case '微博':\n        articleType = 'weibo'\n        break\n      case '论坛':\n        articleType = 'bbs'\n        break\n      case '贴吧':\n        articleType = 'bar'\n        break\n      case '评论':\n        articleType = 'comments'\n        break\n    }\n\n    return articleType\n  },\n  /**\n   * 显示星期对应值\n   * @param week\n   * @returns {string}\n   */\n  unCodeWeekly: function (week) {\n    let weekDay = ''\n    let weekMap = [{key: '1', value: '星期二'}, {key: '2', value: '星期三'}, {key: '3', value: '星期四'},\n      {key: '4', value: '星期五'}, {key: '5', value: '星期六'}, {key: '6', value: '星期日'}, {key: '7', value: '星期一'}]\n    for (let item of weekMap) {\n      if (week === item.key) {\n        weekDay = item.value\n      }\n    }\n\n    return weekDay\n  }\n}\n"]}