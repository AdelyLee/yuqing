{"version":3,"sources":["dateUtil.js"],"names":[],"mappings":"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","file":"dateUtil-compiled.js","sourcesContent":["/**\n * Created by lyc on 17-6-5.\n *\n *\n */\nexport const dateUtil = {\n  /**\n   * 将String类型解析为Date类型.\n   * parseDate('2006-1-1') return new Date(2006,0,1)\n   * parseDate(' 2006-1-1 ') return new Date(2006,0,1)\n   * parseDate('2006-1-1 15:14:16') return new Date(2006,0,1,15,14,16)\n   * parseDate(' 2006-1-1 15:14:16 ') return new Date(2006,0,1,15,14,16)\n   * parseDate('2006-1-1 15:14:16.254') return new Date(2006,0,1,15,14,16,254)\n   * parseDate(' 2006-1-1 15:14:16.254 ') return new Date(2006,0,1,15,14,16,254)\n   * parseDate('不正确的格式') retrun null\n   * @param str\n   * @returns {*}\n   */\n  parseDate: function (str) {\n    if (typeof str === 'string') {\n      var results = str.match(/^ *(\\d{4})-(\\d{1,2})-(\\d{1,2}) *$/)\n      if (results && results.length > 3) {\n        return new Date(parseInt(results[1]), parseInt(results[2]) - 1, parseInt(results[3]))\n      }\n      results = str.match(/^ *(\\d{4})-(\\d{1,2})-(\\d{1,2}) +(\\d{1,2}):(\\d{1,2}):(\\d{1,2}) *$/)\n      if (results && results.length > 6) {\n        return new Date(parseInt(results[1]), parseInt(results[2]) - 1, parseInt(results[3]), parseInt(results[4]), parseInt(results[5]), parseInt(results[6]))\n      }\n      results = str.match(/^ *(\\d{4})-(\\d{1,2})-(\\d{1,2}) +(\\d{1,2}):(\\d{1,2}):(\\d{1,2})\\.(\\d{1,9}) *$/)\n      if (results && results.length > 7) {\n        return new Date(parseInt(results[1]), parseInt(results[2]) - 1, parseInt(results[3]), parseInt(results[4]), parseInt(results[5]), parseInt(results[6]), parseInt(results[7]))\n      }\n    }\n    return null\n  },\n  /**\n   * 格式化date, format字符串 'yyyy-MM-dd',\n   * @param date\n   * @param format\n   * @returns {*}\n   */\n  formatDate: function (date, format) {\n    var formatDate = date\n    var o = {\n      'M+': formatDate.getMonth() + 1, // month\n      'd+': formatDate.getDate(), // day\n      'h+': formatDate.getHours(), // hour\n      'm+': formatDate.getMinutes(), // minute\n      's+': formatDate.getSeconds(), // second\n      'q+': Math.floor((formatDate.getMonth() + 3) / 3), // quarter\n      'S': formatDate.getMilliseconds()\n      // millisecond\n    }\n\n    if (/(y+)/.test(format)) {\n      format = format.replace(RegExp.$1, (formatDate.getFullYear() + '').substr(4 - RegExp.$1.length))\n    }\n\n    for (var k in o) {\n      if (new RegExp('(' + k + ')').test(format)) {\n        format = format.replace(RegExp.$1, RegExp.$1.length === 1\n          ? o[k]\n          : ('00' + o[k]).substr(('' + o[k]).length))\n      }\n    }\n\n    return format\n  },\n  /**\n   * date日期向加减\n   * @param date\n   * @param strInterval\n   * @param Number\n   * @returns {Date}\n   */\n  addDate: function (date, strInterval, Number) {\n    var dtTmp = date\n    switch (strInterval) {\n      case 's' :\n        return new Date(Date.parse(dtTmp) + (1000 * Number))\n      case 'n' :\n        return new Date(Date.parse(dtTmp) + (60000 * Number))\n      case 'h' :\n        return new Date(Date.parse(dtTmp) + (3600000 * Number))\n      case 'd' :\n        return new Date(Date.parse(dtTmp) + (86400000 * Number))\n      case 'w' :\n        return new Date(Date.parse(dtTmp) + ((86400000 * 7) * Number))\n      case 'q' :\n        return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number * 3, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds())\n      case 'm' :\n        return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds())\n      case 'M' :\n        // return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, 1, 0, 0, 0)\n        return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds())\n      case 'y' :\n        return new Date((dtTmp.getFullYear() + Number), dtTmp.getMonth(), dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds())\n    }\n  }\n}\n"]}