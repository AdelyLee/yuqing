{"version":3,"sources":["map-chart.js"],"names":[],"mappings":"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","file":"map-chart-compiled.js","sourcesContent":["/**\n * Created by lyc on 17-7-24.\n * need to do\n */\nimport $ from 'jquery'\n\nexport const mapChartOption = {\n  /**\n   * get gauge chart option by the data and chartConfig.\n   * @param data\n   * data format as:\n   * [{\n   *    name: 'gaugeOne',\n   *    data: [{name: 'a', value: 29},\n   *    {'name': 'b', 'value': 7},\n   *    {'name': 'a', 'value': 29},\n   *    {'name': 'b', 'value': 7}]\n   * },\n   * {\n   *    name: 'gaugeTwo',\n   *    data: [{'name': 'e', 'value': 29},\n   *    {'name': 'f', 'value': 7}]\n   * }]\n   * @param chartConfig\n   * config of the chart\n   * @returns option\n   */\n  getOption: function (data, chartConfig) {\n    let color = ['#21b6b9', '#eba954', '#0092ff', '#d74e67', '#27727B', '#FE8463', '#9BCA63', '#FAD860', '#F3A43B', '#60C0DD', '#D7504B', '#C6E579', '#F4E001', '#F0805A', '#26C0C0']\n    chartConfig = chartConfig || {}\n    let {tooltipData = {}, legendData = {}, xAxisData = {}, yAxisData = {}, gridData = {}, labelLength = 8, ...seriesData} = chartConfig\n    let defaultTooltipData = {trigger: 'axis', axisPointer: {type: 'shadow'}}\n    let defaultLegendData = {x: 'center', y: 'top', data: []}\n    let defaultCategoryAxisData = {\n      type: 'category',\n      name: '',\n      data: [],\n      boundaryGap: [0, 0.01],\n      splitLine: {show: true, interval: 'auto'},\n      axisTick: {show: false},\n      axisLabel: {\n        interval: 0,\n        margin: 10,\n        textStyle: {fontSize: 14},\n        formatter: function (value, index) {\n          let {length} = value\n          if (length > labelLength) {\n            value = value.substring(0, parseInt(length / 2)) + '\\n' + value.substring(parseInt(length / 2))\n          }\n          return value\n        }\n      }\n    }\n    let defaultValueAxisData = {\n      type: 'value',\n      name: '',\n      axisTick: {show: false},\n      axisLabel: {margin: 10, textStyle: {fontSize: 14}}\n    }\n    let defaultGridData = {top: '8%', bottom: '20%', left: '5%', containLabel: true}\n    $.extend(true, tooltipData, defaultTooltipData)\n    $.extend(true, legendData, defaultLegendData)\n    $.extend(true, gridData, defaultGridData)\n    let seriesRenderData = []\n    let defaultSeriesItem = {\n      name: '',\n      type: 'bar',\n      data: [],\n      barMaxWidth: '40',\n      itemStyle: {\n        normal: {\n          color: function (params) {\n            return color[params.dataIndex % 15]\n          }\n        }\n      }\n    }\n\n    if (data.length > 0) {\n      data.forEach(function (item, i) {\n        let seriesItem = {}\n        $.extend(true, seriesItem, defaultSeriesItem)\n        $.extend(true, seriesItem, seriesData[i])\n        seriesItem.name = item.name\n        seriesItem.data = item.data\n        legendData.data.push(item.name)\n        if (item.data.length > 0) {\n          item.data.forEach(function (obj) {\n            defaultCategoryAxisData.data.push(obj.name)\n          })\n        }\n\n        seriesRenderData.push(seriesItem)\n      })\n    }\n\n    if (xAxisData.type === 'value') {\n      $.extend(true, xAxisData, defaultValueAxisData)\n    } else {\n      $.extend(true, xAxisData, defaultCategoryAxisData)\n    }\n    if (yAxisData.type === 'category') {\n      $.extend(true, yAxisData, defaultCategoryAxisData)\n    } else {\n      $.extend(true, yAxisData, defaultValueAxisData)\n    }\n\n    return {\n      color: color,\n      tooltip: tooltipData,\n      legend: legendData,\n      xAxis: xAxisData,\n      yAxis: yAxisData,\n      grid: gridData,\n      series: seriesRenderData\n    }\n  }\n}\n"]}